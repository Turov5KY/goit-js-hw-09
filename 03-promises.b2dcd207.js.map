{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,QAASF,SAASC,cAAc,qBAChCE,OAAQH,SAASC,cAAc,oBAC/BG,SAAUJ,SAASC,cAAc,wBAG7BF,KAAEM,EAAIH,QAAEI,EAAOH,OAAEI,EAAMH,SAAEI,GAAaV,EAI5C,SAASW,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAZPN,EAAKc,iBAAiB,UAgBtB,SAA0BC,GACxBA,EAAEC,iBAEF,MAAMC,EAAWC,OAAOf,EAASgB,OACjC,IAAIC,EAAQF,OAAOjB,EAAQkB,OAC3B,MAAME,EAAOH,OAAOhB,EAAOiB,OAE3B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAUK,GAAK,EAClClB,EAAckB,EAAGF,GACdG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBrB,QAAiBC,UAGzCqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAjC,GAASkC,OAAOG,QACd,sBAAoBvB,QAAeC,UAIzCc,GAAgBC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=delay]'),\n  stepEl: document.querySelector('input[name=step]'),\n  amountEl: document.querySelector('input[name=amount]'),\n};\n\nconst { form, delayEl, stepEl, amountEl } = refs;\n\nform.addEventListener('submit', optionForPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction optionForPromise(e) {\n  e.preventDefault();\n\n  const position = Number(amountEl.value);\n  let delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n\n  for (let i = 1; i <= position; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay = delay + step;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","position1","Number","value","delay1","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b2dcd207.js.map"}