{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,QAASF,SAASC,cAAc,qBAChCE,OAAQH,SAASC,cAAc,oBAC/BG,SAAUJ,SAASC,cAAc,uBAG3BI,EAAoCP,EAApCC,KAAMO,EAA8BR,EAA9BI,QAASK,EAAqBT,EAArBK,OAAQK,EAAaV,EAAbM,SAI/B,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAZPN,EAAKc,iBAAiB,UAgBtB,SAA0BC,GACxBA,EAAEC,iBAMF,IAJA,IAAMC,EAAWC,OAAOf,EAASgB,OAC7BC,EAAQF,OAAOjB,EAAQkB,OACrBE,EAAOH,OAAOhB,EAAOiB,OAElBG,EAAI,EAAGA,GAAKL,EAAUK,GAAK,EAClClB,EAAckB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAIjDc,GAAgBC,EAElBrB,EAAK+B,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=delay]'),\n  stepEl: document.querySelector('input[name=step]'),\n  amountEl: document.querySelector('input[name=amount]'),\n};\n\nconst { form, delayEl, stepEl, amountEl } = refs;\n\nform.addEventListener('submit', optionForPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction optionForPromise(e) {\n  e.preventDefault();\n\n  const position = Number(amountEl.value);\n  let delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n\n  for (let i = 1; i <= position; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay = delay + step;\n  }\n  form.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","position1","Number","value","delay1","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.cde8891c.js.map"}